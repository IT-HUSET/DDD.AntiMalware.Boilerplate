using AutoMapper;
using ITHuset.DDD.AntiMalware.Api.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace ITHuset.DDD.AntiMalware.Api.Controllers
{
    [ApiController]
    [Route("users")]
    public class UsersController : ControllerBase
    {
        private readonly IMapper _mapper;

        public UsersController(
            IMapper mapper)
        {
            _mapper = mapper;
        }

        /// <summary>
        /// Lists all Users.
        /// </summary>
        [HttpGet]
        [ProducesResponseType(typeof(User), StatusCodes.Status200OK)]
        [ProducesResponseType(StatusCodes.Status204NoContent)]
        public async Task<IActionResult> ListUsers()
        {
            #region Dummy implementation
            var users = new List<User>
            {
                new User
                {
                    Id = 1,
                    Name = new Name
                    {
                        FirstName = "Bo",
                        LastName = "Ek"
                    },
                    EmailAddress = new EmailAddress
                    {
                        Value = "bo.ek@example.com"
                    }
                },
                new User
                {
                    Id = 2,
                    Name = new Name
                    {
                        FirstName = "Kalle",
                        LastName = "Anka"
                    },
                    EmailAddress = new EmailAddress
                    {
                        Value = "kalle@ankeborg.net"
                    }
                },
            };

            await Task.CompletedTask;
            return Ok(users);
            #endregion
        }

        /// <summary>
        /// Creates a new User.
        /// </summary>
        /// <param name="user">User object to create, excluding Id which will be generated.</param>
        [HttpPost]
        [ProducesResponseType(typeof(User), StatusCodes.Status201Created)]
        public async Task<IActionResult> CreateUser(User user)
        {
            #region Dummy implementation
            user.Id = 1;
            await Task.CompletedTask;
            #endregion

            return Created("", user); // No GET endpoint exists to refer to
        }
    }
}
