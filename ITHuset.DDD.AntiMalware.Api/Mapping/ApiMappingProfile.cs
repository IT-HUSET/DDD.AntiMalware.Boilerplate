using AutoMapper;
using Model = ITHuset.DDD.AntiMalware.Api.Models;

namespace ITHuset.DDD.AntiMalware.Api.Mapping
{
    public class ApiMappingProfile : Profile
    {
        /// <remarks>
        /// When mapping to domain objects with AutoMapper, it is recommended to use Constructor Mapping:
        /// http://docs.automapper.org/en/stable/Construction.html
        /// The AutoMapper configuration then becomes very simple, you can basically just do:
        ///   CreateMap<User, Model.User>().ReverseMap();
        /// 
        /// However, there are some gotchas. It is crucial that all validation is done when creating domain objects, 
        /// so you need to make sure that AutoMapper doesn't bypass the constructor and map to private/protected properties.
        /// One way to ensure this is by never having default constructors on domain objects (which they never should have anyway).
        /// To be extra safe, you can configure AutoMapper to never map to private/protected properties.
        /// See Configuration/ServiceCollectionExtensions/AddMappingConfiguration.
        /// 
        /// Also, some fields/properties might not have a 1-1 mapping, but that is just business as usual with AutoMapper.
        /// </remarks>
        public ApiMappingProfile()
        {
            CreateMaps_User();
            CreateMaps_Device();
            CreateMaps_Threat();
        }

        private void CreateMaps_User()
        {
            //CreateMap<User, Model.User>().ReverseMap();
        }

        private void CreateMaps_Device()
        {
        }

        private void CreateMaps_Threat()
        {
        }
    }
}
